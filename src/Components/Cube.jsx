/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'
import { useGSAP } from '@gsap/react'
import gsap from 'gsap'
import { useFrame } from '@react-three/fiber'
import { easing } from 'maath'

export default function Cube(props) {
  const { nodes, materials } = useGLTF('./models/cube.glb')

    const modelRef = useRef(null)
    const materialRef = useRef(null)
    
    useFrame((state ,delta)=>{
        const t = state.clock.getElapsedTime()
        modelRef.current.rotation.x=t
        modelRef.current.rotation.y=t
        modelRef.current.rotation.z=t
        modelRef.current.position.y=Math.sin(t)
        materialRef.current.color.setRGB(10+Math.sin(t),0+Math.sin(t),220+Math.sin(t))
    })
 
  return (
    <group {...props} dispose={null}  >
      <mesh ref={modelRef}
        castShadow
        receiveShadow
        geometry={nodes.Cube.geometry}
        material={nodes.Cube.material}
      >
        <meshPhysicalMaterial ref={materialRef} color={[10,1,220]} emissive={true}  />
      </mesh>
    </group>
  )
}

useGLTF.preload('./models/cube.glb')
